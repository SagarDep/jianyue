package com.troy.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.troy.greendao.WeiXinCache;
import com.troy.greendao.PictureCache;
import com.troy.greendao.VideoCache;

import com.troy.greendao.WeiXinCacheDao;
import com.troy.greendao.PictureCacheDao;
import com.troy.greendao.VideoCacheDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig weiXinCacheDaoConfig;
    private final DaoConfig pictureCacheDaoConfig;
    private final DaoConfig videoCacheDaoConfig;

    private final WeiXinCacheDao weiXinCacheDao;
    private final PictureCacheDao pictureCacheDao;
    private final VideoCacheDao videoCacheDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        weiXinCacheDaoConfig = daoConfigMap.get(WeiXinCacheDao.class).clone();
        weiXinCacheDaoConfig.initIdentityScope(type);

        pictureCacheDaoConfig = daoConfigMap.get(PictureCacheDao.class).clone();
        pictureCacheDaoConfig.initIdentityScope(type);

        videoCacheDaoConfig = daoConfigMap.get(VideoCacheDao.class).clone();
        videoCacheDaoConfig.initIdentityScope(type);

        weiXinCacheDao = new WeiXinCacheDao(weiXinCacheDaoConfig, this);
        pictureCacheDao = new PictureCacheDao(pictureCacheDaoConfig, this);
        videoCacheDao = new VideoCacheDao(videoCacheDaoConfig, this);

        registerDao(WeiXinCache.class, weiXinCacheDao);
        registerDao(PictureCache.class, pictureCacheDao);
        registerDao(VideoCache.class, videoCacheDao);
    }
    
    public void clear() {
        weiXinCacheDaoConfig.getIdentityScope().clear();
        pictureCacheDaoConfig.getIdentityScope().clear();
        videoCacheDaoConfig.getIdentityScope().clear();
    }

    public WeiXinCacheDao getWeiXinCacheDao() {
        return weiXinCacheDao;
    }

    public PictureCacheDao getPictureCacheDao() {
        return pictureCacheDao;
    }

    public VideoCacheDao getVideoCacheDao() {
        return videoCacheDao;
    }

}
